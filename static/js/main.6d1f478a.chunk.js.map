{"version":3,"sources":["components/search-box/search-box.component.jsx","components/card/card.component.jsx","components/card-list/card-list.component.jsx","App.js","index.js"],"names":["SearchBox","placeholder","onSearchChange","className","type","onChange","Card","props","alt","src","monster","id","name","email","CardList","monsters","map","App","event","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredKitten","filter","toLowerCase","includes","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uUAaeA,EATG,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,eAAhB,OAChB,uBACEC,UAAU,SACVC,KAAK,SACLH,YAAaA,EACbI,SAAUH,KCOCI,G,YAZF,SAACC,GAAD,OACX,sBAAKJ,UAAU,iBAAf,UACE,qBACEK,IAAI,SAEJC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,4BAEL,6BAAKJ,EAAMG,QAAQE,OACnB,8BAAIL,EAAMG,QAAQG,MAAlB,YCGWC,EAVE,SAACP,GAChB,OACE,qBAAKJ,UAAU,YAAf,SACGI,EAAMQ,SAASC,KAAI,SAACN,GAAD,OAClB,cAAC,EAAD,CAAuBA,QAASA,GAArBA,EAAQC,UCiDZM,E,kDApDb,aAAe,IAAD,8BACZ,gBAmBFf,eAAiB,SAACgB,GAChB,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAlB1C,EAAKC,MAAQ,CACXR,SAAU,GACVK,YAAa,IALH,E,qDAWd,WAAqB,IAAD,OAElBI,MAAM,8CACHC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAAD,OAAW,EAAKT,SAAS,CAAEJ,SAAUa,S,oBAe/C,WAAU,IAAD,EAC2BC,KAAKN,MAA/BR,EADD,EACCA,SAAUK,EADX,EACWA,YAGZU,EAAiBf,EAASgB,QAAO,SAACrB,GAAD,OACrCA,EAAQE,KAAKoB,cAAcC,SAASb,EAAYY,kBAGlD,OACE,sBAAK7B,UAAU,MAAf,UACE,iDACA,cAAC,EAAD,CACEC,KAAK,SACLH,YAAY,iBACZC,eAAgB2B,KAAK3B,iBAEvB,cAAC,EAAD,CAAUa,SAAUe,W,GA/CVI,IAAMC,WCAxBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6d1f478a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nconst SearchBox = ({ placeholder, onSearchChange }) => (\r\n  <input\r\n    className='search'\r\n    type='search'\r\n    placeholder={placeholder}\r\n    onChange={onSearchChange}\r\n  />\r\n);\r\n\r\nexport default SearchBox;\r\n","import React from 'react';\r\n\r\nimport './card.styles.css';\r\n\r\nconst Card = (props) => (\r\n  <div className='card-container'>\r\n    <img\r\n      alt='Kitten'\r\n      //   we can add size to the end to present the proper size\r\n      src={`https://robohash.org/${props.monster.id}?set=set4&size=180x180`}\r\n    />\r\n    <h2>{props.monster.name}</h2>\r\n    <p>{props.monster.email} </p>\r\n  </div>\r\n);\r\n\r\nexport default Card;\r\n","import React from 'react';\r\nimport '../card-list/card-list.styles.css';\r\n\r\nimport Card from '../card/card.component';\r\n\r\nconst CardList = (props) => {\r\n  return (\r\n    <div className='card-list'>\r\n      {props.monsters.map((monster) => (\r\n        <Card key={monster.id} monster={monster} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CardList;\r\n","import React from 'react';\nimport './App.css';\nimport SearchBox from './components/search-box/search-box.component';\nimport CardList from './components/card-list/card-list.component';\n\nclass App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: '',\n    };\n    // this.handleChange= this.handleChange.bind(this);\n  }\n\n  // lifecyle Method: fetch elements from url when mount component\n  componentDidMount() {\n    // what fetch return is a promise\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response) => response.json())\n      .then((users) => this.setState({ monsters: users }));\n  }\n\n  // another way to due with this.state is use arrow function\n  // which means that it automatically bind this as whole component to arrow function\n  onSearchChange = (event) => {\n    this.setState({ searchField: event.target.value });\n  };\n\n  // if we just simply write this method, react actually think 'this' is undefined, therefore has to be explicitly defined\n  // So we need bind function in the constructor.\n  // handleChange(event) {\n  //   this.setState({ searchField: event.target.value });\n  // }\n\n  render() {\n    const { monsters, searchField } = this.state;\n    // The filter() method creates a new array with all elements that PASS the test implemented by the provided function\n    // includes() determines whether or not an array includes a certain value, return a Boolean value\n    const filteredKitten = monsters.filter((monster) =>\n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n\n    return (\n      <div className='App'>\n        <h1>Kittens Rolodex</h1>\n        <SearchBox\n          type='search'\n          placeholder='Search Kittens'\n          onSearchChange={this.onSearchChange}\n        />\n        <CardList monsters={filteredKitten} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}